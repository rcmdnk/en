<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: JavaScript | rcmdnk's blog]]></title>
  <link href="https://rcmdnk.com/en/blog/tags/javascript/atom.xml" rel="self"/>
  <link href="https://rcmdnk.com/en/"/>
  <updated>2023-09-24T00:38:09+00:00</updated>
  <id>https://rcmdnk.com/en/</id>
  <author>
    <name><![CDATA[rcmdnk]]></name>
    <email><![CDATA[rcmdnk@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Comparison of window.onload and jQuery's $(document).ready]]></title>
    <link href="https://rcmdnk.com/en/blog/2016/05/14/computer-javascript-jquery/"/>
    <updated>2016-05-14T00:00:00+00:00</updated>
    <id>https://rcmdnk.com/en/blog/2016/05/14/computer-javascript-jquery</id>
    <content type="html"><![CDATA[<div class="amazon-img"><a href="https://www.amazon.co.jp/gp/product/B00HZ96DBE?ie=UTF8&amp;camp=1207&amp;creative=8411&amp;creativeASIN=B00HZ96DBE&amp;linkCode=shr&amp;tag=rcmdnk0c-22" rel="nofollow" target="_blank"><img width="200" height="200" src="https://images-na.ssl-images-amazon.com/images/I/51wXuc8T0-L._SS280.jpghttps://images-na.ssl-images-amazon.com/images/I/51wXuc8T0-L._SS280.jpg._SS200_.jpg" alt="Amazon.co.jp： Alligator: OnLoad: デジタルミュージック" /></a></div>

<p>JavaScript has a function of <code>window.onload = function()</code>,
which is executed after the page is loaded.</p>

<p>jQuery also has similar function of <code>$(document).ready(runction())</code>,
but they are a little different.</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#windowonload" id="markdown-toc-windowonload">window.onload</a></li>
  <li><a href="#documentready" id="markdown-toc-documentready">$(document).ready</a></li>
  <li><a href="#implement-documentready-like-behavior-wo-jquery" id="markdown-toc-implement-documentready-like-behavior-wo-jquery">Implement $(document).ready like behavior w/o jQuery</a></li>
  <li><a href="#multiple-registration-at-onload" id="markdown-toc-multiple-registration-at-onload">Multiple registration at onload</a></li>
  <li><a href="#execution-order" id="markdown-toc-execution-order">Execution order</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>Sponsored Links</div>
  <div>
  <ins class="adsbygoogle google-img-rect" style="display:inline-block" data-ad-client="ca-pub-3802317723662375" data-ad-slot="4042912847"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h1 id="windowonload">window.onload</h1>

<p><code>window.onload</code> method is executed when <code>onload</code> even occurs.
This means when not only DOM tree is built, but also
all data, such images, are loaded.</p>

<p>To give assign a function, it is like:</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span></span><span class="nb">window</span><span class="p">.</span><span class="nx">onload</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kd">function</span><span class="p">()</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">  </span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;onload 1&#39;</span><span class="p">);</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

<p>Therefore, if you have another liens like below,
it will overwrite the previous one.</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span></span><span class="nb">window</span><span class="p">.</span><span class="nx">onload</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kd">function</span><span class="p">()</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">  </span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;onload 2&#39;</span><span class="p">);</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

<p>In this case, only <code>onload 2</code> is shown.</p>

<p>There are another method of <code>document.body.onload</code>,
which in principle works in the same way as <code>window.onload</code>,
but it behaves a little different in different browser,
so that <code>window.onload</code> is recommended rather than <code>document.body.onload</code>.</p>

<h1 id="documentready">$(document).ready</h1>

<p>This is usually used when jQuery is used.</p>

<p>This is executed when DOM tree is built.
It doesn’t wait loading such images.</p>

<p>Therefore, it is executed earlier than <code>window.onload</code>.</p>

<p>The code is like:</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span></span><span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">ready</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
</span><span class="line"><span class="w">  </span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;ready 1&#39;</span><span class="p">);</span>
</span><span class="line"><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>

<p>This works to put a function,
so multiple inputs can be accepted.</p>

<p>You can omit some parts and can write like:</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span></span><span class="nx">$</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">  </span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;ready 2&#39;</span><span class="p">);</span>
</span><span class="line"><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>

<p>If you have above both, a console shows <code>ready 1</code> and <code>ready 2</code>.</p>

<p>If <code>$</code> has a name collision problem, it should be like</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span></span><span class="nx">jQuery</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">ready</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">$</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">  </span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;ready 3&#39;</span><span class="p">);</span>
</span><span class="line"><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>

<p>And following style with <code>on</code> works similar,
but a little different (see below).</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span></span><span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;ready&#39;</span><span class="p">,</span><span class="w"> </span><span class="kd">function</span><span class="p">(){</span>
</span><span class="line"><span class="w">  </span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;ready 4&#39;</span><span class="p">);</span>
</span><span class="line"><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>

<h1 id="implement-documentready-like-behavior-wo-jquery">Implement $(document).ready like behavior w/o jQuery</h1>

<p>Main differences between <code>window.onload</code> and <code>$(document).ready</code> are
the timing when it is executed,
whether it can have multiple components or not.</p>

<p>For the timing, you can do most of the things when DOM tree is built,
and might want to start w/o waiting images.</p>

<p>In addition, it is much easier just to add,
not overwrite the method,
so <code>$(document).ready</code> is very useful
and it is great if it can be implemented w/o jQuery.</p>

<p>To do this, you should add an event listener to <code>DOMContentLoaded</code><sup id="fninref:1"><a href="#fnin:1" rel="footnote">1</a></sup>.</p>

<p>Here is an example:</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span></span><span class="nb">document</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s1">&#39;DOMContentLoaded&#39;</span><span class="p">,</span><span class="w"> </span><span class="kd">function</span><span class="p">()</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">  </span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;DOMContentLoaded&#39;</span><span class="p">);</span>
</span><span class="line"><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>

<p><code>DomContentloaded</code> means as in the literature,
when DOM is built.
As a matter of fact, <code>$(document).ready</code> uses this internally
<sup id="fninref:2"><a href="#fnin:2" rel="footnote">2</a></sup>.</p>

<p>Of course, <code>addEventListener</code> can accept multiple methods<sup id="fninref:3"><a href="#fnin:3" rel="footnote">3</a></sup>.</p>

<p>In these days, <code>DOMContentLoaded</code> can be used in most of the browsers<sup id="fninref:4"><a href="#fnin:4" rel="footnote">4</a></sup>,
so that <code>$(document).ready</code> can be replaced by <code>DOMContentLoaded</code>.</p>

<h1 id="multiple-registration-at-onload">Multiple registration at onload</h1>

<p>On the other hand, you may need to execute methods
after loading all images.</p>

<p>It can be done by <code>window.onload</code>, but only one method can be registered.</p>

<p>If you can use jQuery,
it is easy that you can write like:</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span></span><span class="nx">$</span><span class="p">(</span><span class="nb">window</span><span class="p">).</span><span class="nx">load</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">  </span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;onload jquery 0&#39;</span><span class="p">);</span>
</span><span class="line"><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>

<p>or</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span></span><span class="nx">$</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nb">window</span><span class="p">,</span><span class="s1">&#39;load&#39;</span><span class="p">,</span><span class="kd">function</span><span class="p">()</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">  </span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;event add load 0&#39;</span><span class="p">);</span>
</span><span class="line"><span class="p">});</span>
</span><span class="line">
</span><span class="line"><span class="nx">$</span><span class="p">(</span><span class="nb">window</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;load&#39;</span><span class="p">,</span><span class="w"> </span><span class="kd">function</span><span class="p">()</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">  </span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;on load 0&#39;</span><span class="p">);</span>
</span><span class="line"><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>

<p>If you can’t use jQuery,
you need to write like:</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span></span><span class="kd">function</span><span class="w"> </span><span class="nx">ready_func</span><span class="w"> </span><span class="p">(){</span>
</span><span class="line"><span class="w">  </span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;ready_func&#39;</span><span class="p">);</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="k">if</span><span class="p">(</span><span class="w"> </span><span class="nb">window</span><span class="p">.</span><span class="nx">addEventListener</span><span class="w"> </span><span class="p">){</span>
</span><span class="line"><span class="w">  </span><span class="nb">window</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s1">&#39;load&#39;</span><span class="p">,</span><span class="w"> </span><span class="nx">ready_func</span><span class="p">);</span>
</span><span class="line"><span class="p">}</span><span class="k">else</span><span class="w"> </span><span class="k">if</span><span class="p">(</span><span class="w"> </span><span class="nb">window</span><span class="p">.</span><span class="nx">attachEvent</span><span class="w"> </span><span class="p">){</span>
</span><span class="line"><span class="nb">window</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">(</span><span class="s1">&#39;onload&#39;</span><span class="p">,</span><span class="w"> </span><span class="nx">ready_func</span><span class="p">);</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="c1">//else{</span>
</span><span class="line"><span class="c1">//  window.onload = ready_func;</span>
</span><span class="line"><span class="c1">//}</span>
</span></code></pre></td></tr></table></div></figure>

<p><code>attacEvent</code> method is for IE.</p>

<p>Be careful that argument is a little different between <code>addEventListener</code>
and <code>attachEvent</code> (<code>load</code> and <code>onload</code>, respectively)
<sup id="fninref:5"><a href="#fnin:5" rel="footnote">5</a></sup>.</p>

<p>Most of browser can be covered by these two methods,
but if necessary, <code>window.onload</code> can be placed here (though only one method can be registered).</p>

<h1 id="execution-order">Execution order</h1>

<p>As written above, <code>ready</code> is executed earlier than <code>load</code>.
To check more details, let’s try following code:</p>

<figure class="code"><figcaption><span>test.html </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
<span class="line-number">61</span>
<span class="line-number">62</span>
<span class="line-number">63</span>
<span class="line-number">64</span>
<span class="line-number">65</span>
<span class="line-number">66</span>
<span class="line-number">67</span>
<span class="line-number">68</span>
<span class="line-number">69</span>
<span class="line-number">70</span>
<span class="line-number">71</span>
<span class="line-number">72</span>
<span class="line-number">73</span>
<span class="line-number">74</span>
<span class="line-number">75</span>
<span class="line-number">76</span>
<span class="line-number">77</span>
<span class="line-number">78</span>
<span class="line-number">79</span>
<span class="line-number">80</span>
<span class="line-number">81</span>
<span class="line-number">82</span>
<span class="line-number">83</span>
<span class="line-number">84</span>
<span class="line-number">85</span>
<span class="line-number">86</span>
<span class="line-number">87</span>
<span class="line-number">88</span>
<span class="line-number">89</span>
<span class="line-number">90</span>
<span class="line-number">91</span>
<span class="line-number">92</span>
<span class="line-number">93</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span></span><span class="o">&lt;</span><span class="nx">html</span><span class="o">&gt;</span>
</span><span class="line"><span class="o">&lt;</span><span class="nx">head</span><span class="o">&gt;</span>
</span><span class="line"><span class="o">&lt;</span><span class="nx">meta</span><span class="w"> </span><span class="nx">charset</span><span class="o">=</span><span class="s2">&quot;utf-8&quot;</span><span class="o">&gt;</span>
</span><span class="line"><span class="o">&lt;</span><span class="nx">script</span><span class="w"> </span><span class="nx">src</span><span class="o">=</span><span class="s2">&quot;http://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js&quot;</span><span class="o">&gt;&lt;</span><span class="err">/script&gt;</span>
</span><span class="line"><span class="o">&lt;</span><span class="err">/head&gt;</span>
</span><span class="line"><span class="o">&lt;</span><span class="nx">body</span><span class="o">&gt;</span>
</span><span class="line"><span class="o">&lt;</span><span class="nx">script</span><span class="o">&gt;</span>
</span><span class="line"><span class="p">(</span><span class="kd">function</span><span class="p">()</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">  </span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;IIFE 0&#39;</span><span class="p">)</span>
</span><span class="line"><span class="p">}());</span>
</span><span class="line">
</span><span class="line"><span class="nb">window</span><span class="p">.</span><span class="nx">onload</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kd">function</span><span class="p">()</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">  </span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;load 0 window.onload = function() {...&#39;</span><span class="p">);</span>
</span><span class="line"><span class="p">};</span>
</span><span class="line">
</span><span class="line"><span class="nb">window</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s1">&#39;load&#39;</span><span class="p">,</span><span class="w"> </span><span class="kd">function</span><span class="p">()</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">  </span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;load 0 window.addEventListener(&quot;load&quot;, function() {...&#39;</span><span class="p">);</span>
</span><span class="line"><span class="p">});</span>
</span><span class="line">
</span><span class="line"><span class="nx">$</span><span class="p">(</span><span class="nb">window</span><span class="p">).</span><span class="nx">load</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">  </span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;load 0 $(window).load(function() {...&#39;</span><span class="p">);</span>
</span><span class="line"><span class="p">});</span>
</span><span class="line">
</span><span class="line"><span class="nx">$</span><span class="p">(</span><span class="nb">window</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;load&#39;</span><span class="p">,</span><span class="w"> </span><span class="kd">function</span><span class="p">()</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">  </span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;load 0 $(window).on(&quot;load&quot;, function() {...&#39;</span><span class="p">);</span>
</span><span class="line"><span class="p">});</span>
</span><span class="line">
</span><span class="line"><span class="nx">$</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nb">window</span><span class="p">,</span><span class="s1">&#39;load&#39;</span><span class="p">,</span><span class="w"> </span><span class="kd">function</span><span class="p">()</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">  </span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;load 0 $.event.add(window, &quot;load&quot;, function() {...&#39;</span><span class="p">);</span>
</span><span class="line"><span class="p">});</span>
</span><span class="line">
</span><span class="line"><span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">ready</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">  </span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;ready 0 $(document).ready(function() {...&#39;</span><span class="p">);</span>
</span><span class="line"><span class="p">});</span>
</span><span class="line">
</span><span class="line"><span class="nb">document</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s1">&#39;DOMContentLoaded&#39;</span><span class="p">,</span><span class="w"> </span><span class="kd">function</span><span class="p">()</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">  </span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;ready 0 document.addEventListener(&quot;DOMContentLoaded&quot;, function() {...&#39;</span><span class="p">);</span>
</span><span class="line"><span class="p">});</span>
</span><span class="line">
</span><span class="line"><span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;ready&#39;</span><span class="p">,</span><span class="w"> </span><span class="kd">function</span><span class="p">()</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">  </span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;ready 0 $(document).on(&quot;ready&quot;, function() {...&#39;</span><span class="p">);</span>
</span><span class="line"><span class="p">});</span>
</span><span class="line">
</span><span class="line"><span class="nx">$</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">  </span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;ready 0 $(function() {...&#39;</span><span class="p">);</span>
</span><span class="line"><span class="p">});</span>
</span><span class="line">
</span><span class="line"><span class="p">(</span><span class="kd">function</span><span class="p">()</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">  </span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;IIFE 1&#39;</span><span class="p">)</span>
</span><span class="line"><span class="p">}());</span>
</span><span class="line">
</span><span class="line"><span class="nb">window</span><span class="p">.</span><span class="nx">onload</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kd">function</span><span class="p">()</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">  </span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;load 1 window.onload = function() {...&#39;</span><span class="p">);</span>
</span><span class="line"><span class="p">};</span>
</span><span class="line">
</span><span class="line"><span class="nb">window</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s1">&#39;load&#39;</span><span class="p">,</span><span class="w"> </span><span class="kd">function</span><span class="p">()</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">  </span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;load 1 window.addEventListener(&quot;load&quot;, function() {...&#39;</span><span class="p">);</span>
</span><span class="line"><span class="p">});</span>
</span><span class="line">
</span><span class="line"><span class="nx">$</span><span class="p">(</span><span class="nb">window</span><span class="p">).</span><span class="nx">load</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">  </span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;load 1 $(window).load(function() {...&#39;</span><span class="p">);</span>
</span><span class="line"><span class="p">});</span>
</span><span class="line">
</span><span class="line"><span class="nx">$</span><span class="p">(</span><span class="nb">window</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;load&#39;</span><span class="p">,</span><span class="w"> </span><span class="kd">function</span><span class="p">()</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">  </span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;load 1 $(window).on(&quot;load&quot;, function() {...&#39;</span><span class="p">);</span>
</span><span class="line"><span class="p">});</span>
</span><span class="line">
</span><span class="line"><span class="nx">$</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nb">window</span><span class="p">,</span><span class="s1">&#39;load&#39;</span><span class="p">,</span><span class="w"> </span><span class="kd">function</span><span class="p">()</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">  </span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;load 1 $.event.add(window, &quot;load&quot;, function() {...&#39;</span><span class="p">);</span>
</span><span class="line"><span class="p">});</span>
</span><span class="line">
</span><span class="line"><span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">ready</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">  </span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;ready 1 $(document).ready(function() {...&#39;</span><span class="p">);</span>
</span><span class="line"><span class="p">});</span>
</span><span class="line">
</span><span class="line"><span class="nb">document</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s1">&#39;DOMContentLoaded&#39;</span><span class="p">,</span><span class="w"> </span><span class="kd">function</span><span class="p">()</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">  </span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;ready 1 document.addEventListener(&quot;DOMContentLoaded&quot;, function() {...&#39;</span><span class="p">);</span>
</span><span class="line"><span class="p">});</span>
</span><span class="line">
</span><span class="line"><span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;ready&#39;</span><span class="p">,</span><span class="w"> </span><span class="kd">function</span><span class="p">()</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">  </span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;ready 1 $(document).on(&quot;ready&quot;, function() {...&#39;</span><span class="p">);</span>
</span><span class="line"><span class="p">});</span>
</span><span class="line">
</span><span class="line"><span class="nx">$</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">  </span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;ready 1 $(function() {...&#39;</span><span class="p">);</span>
</span><span class="line"><span class="p">});</span>
</span><span class="line">
</span><span class="line"><span class="p">(</span><span class="kd">function</span><span class="p">()</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">  </span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;IIFE 2&#39;</span><span class="p">)</span>
</span><span class="line"><span class="p">}());</span>
</span><span class="line"><span class="o">&lt;</span><span class="err">/script&gt;</span>
</span><span class="line"><span class="o">&lt;</span><span class="err">/body&gt;</span>
</span><span class="line"><span class="o">&lt;</span><span class="err">/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>

<p>This code uses:</p>

<ul>
  <li>load:
    <ul>
      <li><code>window.onload = function() {...</code></li>
      <li><code>window.addEventListener("load", function() {...</code></li>
      <li><code>$(window).load(function() {...</code> (jQuery)</li>
      <li><code>$(window).on("load", function() {...</code> (jQuery)</li>
      <li><code>$.event.add(window, "load", function() {...</code> (jQuery)</li>
    </ul>
  </li>
  <li>ready:
    <ul>
      <li><code>document.addEventListener("DOMContentLoaded", function() {...</code></li>
      <li><code>$(document).ready(function() {...</code> (jQuery)</li>
      <li><code>$(function() {...</code> (jQuery)</li>
    </ul>
  </li>
</ul>

<p>In addition, there are some immediately-invoked function expressions (IIFE).</p>

<p>The result with Google Chrome(43.0.2357.130, Mac) is:</p>

<pre><code>IIFE 0
IIFE 1
IIFE 2
ready 0 $(document).ready(function() {...
ready 0 $(function() {...
ready 1 $(document).ready(function() {...
ready 1 $(function() {...
ready 0 $(document).on("ready", function() {...
ready 1 $(document).on("ready", function() {...
ready 0 document.addEventListener("DOMContentLoaded", function() {...
ready 1 document.addEventListener("DOMContentLoaded", function() {...
load 0 window.addEventListener("load", function() {...
load 0 $(window).load(function() {...
load 0 $(window).on("load", function() {...
load 0 $.event.add(window, "load", function() {...
load 1 $(window).load(function() {...
load 1 $(window).on("load", function() {...
load 1 $.event.add(window, "load", function() {...
load 1 window.onload = function() {...
load 1 window.addEventListener("load", function() {...
</code></pre>

<p>On the other hand, the result with Firefox(39.0, Mac) shows
almost same, but <code>load 1 window.onload = function() {...</code>
is shown before <code>load 0 window.addEventListener("load", function() {...</code>.</p>

<p>After some tests, followings can be seen:</p>

<ul>
  <li>About <code>ready</code>:
    <ul>
      <li>Frist, jQuery’s document ready related things, such <code>$(document).ready</code>, or <code>$(function()</code>, are executed in the written order.</li>
      <li>Second, <code>$(document).on("ready"</code> is executed.</li>
      <li>Then, <code>"DOMContentLoaded"</code> is executed.</li>
    </ul>
  </li>
  <li>About <code>load</code>:
    <ul>
      <li>Only the last one of <code>window.onload</code> is executed.</li>
      <li><code>window.onload</code> and <code>addEventListener("load"</code> are executed in the written order. But if there are more than one <code>window.onload</code>, the first one is used as an order point.
        <ul>
          <li>In above example, <code>load 1 window.onload</code> is written in the last,
but <code>load 0 window.onload</code> is used as an order point,
therefore it is executed before <code>load 1 window.addEventListener("load"</code>.</li>
        </ul>
      </li>
      <li>Methods are executed in written order in jQuery’s methods, <code>$(window).load</code>, <code>$(window).on("load"</code> and <code>$event.add(window, "load"</code>.</li>
      <li>On Firefox, <code>window.onload</code> and <code>addEventListener("load"</code> are executed
before jQuery’s <code>load</code>, if it is written before all of jQuery’s <code>load</code> methods.
        <ul>
          <li>jQuery’s <code>load</code> is executed first if any of jQuery’s <code>load</code> is written before <code>window.onload</code>.</li>
          <li>Here, the order point of <code>window.onload</code> is the first written one as written above.</li>
        </ul>
      </li>
      <li>On Google Chrome, <code>addEventListener("load"</code> is executed
beore jQuerey’s <code>load</code>, if it is written before all of jQuery’s <code>load</code> method.
        <ul>
          <li>jQuery’s <code>load</code> is executed first if any of jQuery’s <code>load</code> is written before <code>addEventListener("load"</code>.</li>
        </ul>
      </li>
      <li>On Google Chrome, <code>window.onload</code> is executed before jQuery’s <code>load</code> in any case.</li>
    </ul>
  </li>
</ul>

<p>It is a bit complex,
but one could argue that
it is unstable if these different methods are used all together,
so that it should be written in the same way in each <code>load</code> or <code>ready</code>.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Enable an event tracking of Google Website Translator with Universal Analytics]]></title>
    <link href="https://rcmdnk.com/en/blog/2015/01/28/blog-javascript/"/>
    <updated>2015-01-28T12:00:00+00:00</updated>
    <id>https://rcmdnk.com/en/blog/2015/01/28/blog-javascript</id>
    <content type="html"><![CDATA[<div class="amazon-img"><a href="http://www.amazon.com/o/ASIN/0596158009/rcmdnksblog-20/" rel="nofollow" target="_blank"><img src="https://images-fe.ssl-images-amazon.com/images/I/51j60chkWrL._SS200_.jpg" alt="Google Analytics" /></a></div>

<p>I recently noticed that an event tracking of Google Website Translator is no longer available.</p>

<p>What I was changed is the code of Google Analytics: old <strong>ga.js</strong> code to
new Universal Analytics code, <strong>analytics.js</strong>.</p>

<p>It seems Google Translate code is not updated for Universal Analytics.
Here is my attempt to fix it by modifying core codes of Google Translate.</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#put-google-website-translator-in-your-blog" id="markdown-toc-put-google-website-translator-in-your-blog">Put Google Website Translator in your blog</a></li>
  <li><a href="#how-to-fix" id="markdown-toc-how-to-fix">How to fix</a></li>
  <li><a href="#summary" id="markdown-toc-summary">Summary</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>Sponsored Links</div>
  <div>
  <ins class="adsbygoogle google-img-rect" style="display:inline-block" data-ad-client="ca-pub-3802317723662375" data-ad-slot="4042912847"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h1 id="put-google-website-translator-in-your-blog">Put Google Website Translator in your blog</h1>

<p>You can easily put <a href="https://translate.google.com/manager/website/suggestions">Google Website Translator</a>
by following the instruction on the page.</p>

<p>You can also put your Analytics code to track translation events
by Google Analytics.</p>

<p>Events have information of which languages are used in <strong>Event Label</strong>.</p>

<p>It had worked for a long time, but suddenly, it stopped working.
It seems it stopped when I updated some codes of JavaScript,
especially I updated Google Analytics code from old <strong>ga.js</strong> to Universal Analytics <strong>analytics.js</strong>.</p>

<p>I found some posts related to this problem:</p>

<blockquote>
  <p><a href="http://webmasters.stackexchange.com/questions/52557/google-translate-data-tracked-with-gatrack-is-not-showing-up-in-google-analytics">Google Translate data tracked with gaTrack is not showing up in Google Analytics? - Webmasters Stack Exchange</a></p>
</blockquote>

<blockquote>
  <p><a href="https://groups.google.com/forum/#!topic/google-analytics-analyticsjs/6XPCCy3FSlw">google translate events not in analytics anymore.</a></p>
</blockquote>

<p>The first one was posted in September/2013, and the latter was posted on 22/January /2015.
So, it seems this problem is a remaining problem since Universal Analytics was released.</p>

<h1 id="how-to-fix">How to fix</h1>

<p>From <a href="https://translate.google.com/manager/website/suggestions">Google Website Translator</a>,
codes like below are provided:</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span></span><span class="p">&lt;</span><span class="nt">div</span> <span class="na">id</span><span class="o">=</span><span class="s">&quot;google_translate_element&quot;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;&lt;</span><span class="nt">script</span> <span class="na">type</span><span class="o">=</span><span class="s">&quot;text/javascript&quot;</span><span class="p">&gt;</span>
</span><span class="line"><span class="kd">function</span><span class="w"> </span><span class="nx">googleTranslateElementInit</span><span class="p">()</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">  </span><span class="ow">new</span><span class="w"> </span><span class="nx">google</span><span class="p">.</span><span class="nx">translate</span><span class="p">.</span><span class="nx">TranslateElement</span><span class="p">({</span><span class="nx">pageLanguage</span><span class="o">:</span><span class="w"> </span><span class="s1">&#39;en&#39;</span><span class="p">,</span><span class="w"> </span><span class="nx">layout</span><span class="o">:</span><span class="w"> </span><span class="nx">google</span><span class="p">.</span><span class="nx">translate</span><span class="p">.</span><span class="nx">TranslateElement</span><span class="p">.</span><span class="nx">InlineLayout</span><span class="p">.</span><span class="nx">SIMPLE</span><span class="p">,</span><span class="w"> </span><span class="nx">autoDisplay</span><span class="o">:</span><span class="w"> </span><span class="kc">false</span><span class="p">,</span><span class="w"> </span><span class="nx">multilanguagePage</span><span class="o">:</span><span class="w"> </span><span class="kc">true</span><span class="p">,</span><span class="w"> </span><span class="nx">gaTrack</span><span class="o">:</span><span class="w"> </span><span class="kc">true</span><span class="p">,</span><span class="w"> </span><span class="nx">gaId</span><span class="o">:</span><span class="w"> </span><span class="s1">&#39;UA-XXXXXXXX-X&#39;</span><span class="p">},</span><span class="w"> </span><span class="s1">&#39;google_translate_element&#39;</span><span class="p">);</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="p">&lt;/</span><span class="nt">script</span><span class="p">&gt;&lt;</span><span class="nt">script</span> <span class="na">type</span><span class="o">=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src</span><span class="o">=</span><span class="s">&quot;//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit&quot;</span><span class="p">&gt;&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
</span></code></pre></td></tr></table></div></figure>

<p>Then, let’s check <strong>element.js</strong>:</p>

<blockquote>
  <p><a href="http://translate.google.com/translate_a/element.js">http://translate.google.com/translate_a/element.js?cb=googleTranslateElementInit</a> (<a href="http://codebeautify.org/jsviewer/27d513">Beautified element.js</a>)</p>
</blockquote>

<p>It calls <strong>main.js</strong>:</p>

<blockquote>
  <p><a href="https://translate.googleapis.com/translate_static/js/element/main.js">https://translate.googleapis.com/translate_static/js/element/main.js</a> (<a href="http://codebeautify.org/jsviewer/9fb63d">Beautified main.js</a>)</p>
</blockquote>

<p><img alt="memo" src="https://rcmdnk.com/en/images/emoji/unicode/1f4dd.png" class="emoji" /> If your browser’s setting is other than English,
a direct access to <strong>element.js</strong> shows different codes comparing to the Beautified code.</p>

<p>For example, with Japanese environment, <strong>element.js</strong> calls <strong>main_ja.js</strong> instead of <strong>main.js</strong></p>

<blockquote>
  <p><a href="https://translate.googleapis.com/translate_static/js/element/main_ja.js">https://translate.googleapis.com/translate_static/js/element/main_ja.js</a></p>
</blockquote>

<p>In the below, <strong>element_main.js</strong> is common for all language,
while such <strong>0/main.js</strong> is replaced by <strong>0/main_ja.js</strong> in Japanese environment.</p>

<p>It is too tight to follow all scripts.
Therefore, in this attempt, I use only <strong>main.js</strong> from <strong>element.js</strong>.
As a result, the translator button will be always English version.</p>

<p>Anyway, <strong>main.js</strong> calls:</p>

<blockquote>
  <p><a href="https://translate.googleapis.com/translate_static/js/element/0/main.js">https://translate.googleapis.com/translate_static/js/element/0/main.js</a></p>
</blockquote>

<p>or</p>

<blockquote>
  <p><a href="https://translate.googleapis.com/translate_static/js/element/26/element_main.js">https://translate.googleapis.com/translate_static/js/element/26/element_main.js</a></p>
</blockquote>

<p>Let’s check these scripts precisely.
Hereafter, I would use <strong>0_main.js</strong> for above <strong>element/0/main.js</strong> to distinguish from <strong>element/man.js</strong>.</p>

<blockquote>
  <p><a href="http://codebeautify.org/jsviewer/9629b6">0_main.js</a></p>
</blockquote>

<blockquote>
  <p><a href="http://codebeautify.org/jsviewer/87703f">element_main.js</a></p>
</blockquote>

<p>In the beautified code, you can find following part in <strong>0_main.js</strong>:</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span></span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">.</span><span class="nx">Cc</span><span class="w"> </span><span class="o">&amp;&amp;</span><span class="w"> </span><span class="nx">p</span><span class="p">.</span><span class="nx">_gaq</span><span class="w"> </span><span class="o">&amp;&amp;</span><span class="w"> </span><span class="nx">p</span><span class="p">.</span><span class="nx">_gat</span><span class="p">)</span><span class="w"> </span><span class="k">try</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">  </span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">.</span><span class="nx">Yb</span><span class="w"> </span><span class="o">?</span><span class="w"> </span><span class="nx">p</span><span class="p">.</span><span class="nx">_gat</span><span class="p">.</span><span class="nx">_getTracker</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">.</span><span class="nx">Yb</span><span class="p">).</span><span class="nx">_trackEvent</span><span class="p">(</span><span class="s2">&quot;Google Website Translator&quot;</span><span class="p">,</span><span class="w"> </span><span class="s2">&quot;Translate&quot;</span><span class="p">,</span><span class="w"> </span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="p">)</span><span class="w"> </span><span class="o">:</span><span class="w"> </span><span class="nx">p</span><span class="p">.</span><span class="nx">_gat</span><span class="p">.</span><span class="nx">_getTrackerByName</span><span class="p">().</span><span class="nx">_trackEvent</span><span class="p">(</span><span class="s2">&quot;Google Website Translator&quot;</span><span class="p">,</span><span class="w"> </span><span class="s2">&quot;Translate&quot;</span><span class="p">,</span><span class="w"> </span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="p">)</span>
</span><span class="line"><span class="p">}</span><span class="w"> </span><span class="k">catch</span><span class="w"> </span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="w"> </span><span class="p">{}</span>
</span></code></pre></td></tr></table></div></figure>

<p>So, it uses only functions of <code>_gaq</code> or <code>_trackEvent</code> of <strong>ga.js</strong>.
As a result, we can not make an event with Universal Analytics.</p>

<p>Ok, now the place at where the event is created becomes clear.
Then, it should work if the event track function of Universal Analytics is added
by following my previous post: <a href="https://rcmdnk.com/en/blog/2015/01/27/octopress-javascript/">Notice a copy event on your blog in Google Analytics</a>,
like:</p>

<figure class="code"><figcaption><span>0_main_ja.js.diff</span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class="diff"><span class="line"><span></span><span class="gd">--- 0_main.orig.js      2015-01-01 00:00:00.000000000 +0000</span>
</span><span class="line"><span class="gi">+++ 0_main.js   2015-01-01 00:00:00.000000000 +0000</span>
</span><span class="line"><span class="gu">@@ -6047,6 +6047,9 @@</span>
</span><span class="line"><span class="w"> </span>    if (a.e.Cc &amp;&amp; p._gaq &amp;&amp; p._gat) try {
</span><span class="line"><span class="w"> </span>      a.e.Yb ? p._gat._getTracker(a.e.Yb)._trackEvent(&quot;Google Website Translator&quot;, &quot;Translate&quot;, a.d) : p._gat._getTrackerByName()._trackEvent(&quot;Google Website Translator&quot;, &quot;Translate&quot;, a.d)
</span><span class="line"><span class="w"> </span>    } catch (e) {}
</span><span class="line"><span class="gi">+    if (a.e.Cc &amp;&amp; p.ga ) try {</span>
</span><span class="line"><span class="gi">+        f.ga(&#39;send&#39;, &#39;event&#39;, &quot;Google Website Translator&quot;, &quot;Translate&quot;, a.d);</span>
</span><span class="line"><span class="gi">+    } catch (e) {}</span>
</span><span class="line"><span class="w"> </span>  }
</span><span class="line"><span class="w"> </span>  R.Cd = function(a, b, c) {
</span><span class="line"><span class="w"> </span>    hc(this.gb) == &quot;function&quot; &amp;&amp; this.gb();
</span></code></pre></td></tr></table></div></figure>

<figure class="code"><figcaption><span>element_main.js.diff</span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class="diff"><span class="line"><span></span><span class="gd">--- element_main.orig.js        2015-01-01 00:00:00.000000000 +0000</span>
</span><span class="line"><span class="gi">+++ element_main.js     2015-01-01 00:00:00.000000000 +0000</span>
</span><span class="line"><span class="gu">@@ -14075,6 +14075,9 @@</span>
</span><span class="line"><span class="w"> </span>    if (a.b.hg &amp;&amp; f._gaq &amp;&amp; f._gat) try {
</span><span class="line"><span class="w"> </span>      a.b.Ne ? f._gat._getTracker(a.b.Ne)._trackEvent(Zi, Rj, a.e) : f._gat._getTrackerByName()._trackEvent(Zi, Rj, a.e)
</span><span class="line"><span class="w"> </span>    } catch (d) {}
</span><span class="line"><span class="gi">+    if (a.b.hg &amp;&amp; f.ga ) try {</span>
</span><span class="line"><span class="gi">+        f.ga(&#39;send&#39;, &#39;event&#39;, Zi, Rj, a.e);</span>
</span><span class="line"><span class="gi">+    } catch (d) {}</span>
</span><span class="line"><span class="w"> </span>  }
</span><span class="line"><span class="w"> </span>  Q.Mi = function(a, b, c) {
</span><span class="line"><span class="w"> </span>    ku(this.Ga) == Vn &amp;&amp; this.Ga();
</span></code></pre></td></tr></table></div></figure>

<p><code>p</code> and <code>f</code> are <code>Window</code> object in <strong>0_main.js</strong> and <strong>element_main.js</strong>, respectively.
<code>Window</code> should have <code>ga</code> if <strong>analytics.js</strong> is used on the page (in the normal way),
instead of <code>_gaq</code> of <strong>ga.js</strong>.</p>

<p><code>a.b</code> and <code>a.e</code> have values of the language, so it should be in the 5th argument (<strong>Event Label</strong>).</p>

<p>In <strong>element_main.js</strong>, <code>Zi</code> and <code>Rj</code> are <code>Google Website Translator</code> and <code>Translate</code>, respectively.
So in both files, <code>ga</code> works in the same way.</p>

<p>Once modifications are finished, put them in <strong>/javascripts/translate/</strong>.
(In Octopress, put them in <strong>source/javascripts/translate/</strong>.)</p>

<p>Put <strong>0_main.js</strong> as <strong>/javascripts/translate/0_main.js</strong>.</p>

<p>Next, modify:</p>

<blockquote>
  <p><a href="http://codebeautify.org/jsviewer/9fb63d">main.js</a></p>
</blockquote>

<p>as</p>

<figure class="code"><figcaption><span>main.js.diff</span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
</pre></td><td class="code"><pre><code class="diff"><span class="line"><span></span><span class="gd">--- main.orig.js        2015-01-01 00:00:00.000000000 +0000</span>
</span><span class="line"><span class="gi">+++ main.js     2015-01-01 00:00:00.000000000 +0000</span>
</span><span class="line"><span class="gu">@@ -118,16 +118,13 @@</span>
</span><span class="line"><span class="w"> </span>      }
</span><span class="line"><span class="w"> </span>      C = &quot;26&quot;
</span><span class="line"><span class="w"> </span>    }
</span><span class="line"><span class="gd">-    var Q = &quot;/translate_static/js/element/%s/element_main.js&quot;.replace(&quot;%s&quot;,</span>
</span><span class="line"><span class="gd">-    C);</span>
</span><span class="line"><span class="gi">+    var Q = &quot;/javascripts/translate/element_main.js&quot;;</span>
</span><span class="line"><span class="w"> </span>    if (&quot;0&quot; == C) {
</span><span class="line"><span class="gd">-      var R = &quot; translate_static js element %s element_main.js&quot;.split(&quot; &quot;);</span>
</span><span class="line"><span class="gd">-      R[R[d] - 1] = &quot;main.js&quot;;</span>
</span><span class="line"><span class="gd">-      Q = R.join(&quot;/&quot;).replace(&quot;%s&quot;, C)</span>
</span><span class="line"><span class="gi">+      Q = &quot;/javascripts/translate/0_main.js&quot;</span>
</span><span class="line"><span class="w"> </span>    }
</span><span class="line"><span class="gd">-    if (B._cjlc) B._cjlc(B._pas + B._pah + Q);</span>
</span><span class="line"><span class="gi">+    if (B._cjlc) B._cjlc(Q);</span>
</span><span class="line"><span class="w"> </span>    else {
</span><span class="line"><span class="gd">-      var S = B._pas + B._pah + Q,</span>
</span><span class="line"><span class="gi">+      var S = Q,</span>
</span><span class="line"><span class="w"> </span>        T = c.createElement(&quot;script&quot;);
</span><span class="line"><span class="w"> </span>      T.type = &quot;text/javascript&quot;;
</span><span class="line"><span class="w"> </span>      T.charset = &quot;UTF-8&quot;;
</span></code></pre></td></tr></table></div></figure>

<p>and</p>

<blockquote>
  <p><a href="http://codebeautify.org/jsviewer/afcc47">element.js</a></p>
</blockquote>

<p>as</p>

<figure class="code"><figcaption><span>element.js.diff</span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class="diff"><span class="line"><span></span><span class="gd">--- element.orig.js     2015-01-01 00:00:00.000000000 +0000</span>
</span><span class="line"><span class="gi">+++ element.js  2015-01-01 00:00:00.000000000 +0000</span>
</span><span class="line"><span class="gu">@@ -65,6 +65,6 @@</span>
</span><span class="line"><span class="w"> </span>    c._ps = b + &#39;/translate_static/css/translateelement.css&#39;;
</span><span class="line"><span class="w"> </span>    c._puh = &#39;translate.google.com&#39;;
</span><span class="line"><span class="w"> </span>    _loadCss(c._ps);
</span><span class="line"><span class="gd">-    _loadJs(b + &#39;/translate_static/js/element/main.js&#39;);</span>
</span><span class="line"><span class="gi">+    _loadJs(&#39;javascripts/translate/main.js&#39;);</span>
</span><span class="line"><span class="w"> </span>  })();
</span><span class="line"><span class="w"> </span>})();
</span></code></pre></td></tr></table></div></figure>

<p>In the last, update the original Google Website Translator code in <code>&lt;head&gt;</code>:</p>

<figure class="code"><figcaption><span>head.html</span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="diff"><span class="line"><span></span><span class="w"> </span>&lt;div id=&quot;google_translate_element&quot;&gt;&lt;/div&gt;&lt;script type=&quot;text/javascript&quot;&gt;
</span><span class="line"><span class="w"> </span>function googleTranslateElementInit() {
</span><span class="line"><span class="w"> </span>  new google.translate.TranslateElement({pageLanguage: &#39;en&#39;, layout: google.translate.TranslateElement.InlineLayout.SIMPLE, autoDisplay: false, multilanguagePage: true, gaTrack: true, gaId: &#39;UA-XXXXXXXX-X&#39;}, &#39;google_translate_element&#39;);
</span><span class="line"><span class="w"> </span>}
</span><span class="line"><span class="w"> </span>&lt;/script&gt;
</span><span class="line"><span class="gd">-&lt;script src=&#39;//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit&#39; async defer&gt;&lt;/script&gt;</span>
</span><span class="line"><span class="gi">+&lt;script src=&#39;/javascripts/translate/element.js&#39; async defer&gt;&lt;/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>

<p>to call the local scripts.
(In the modified element.js, <code>googleTranslateElementInit</code> is already set. (if you started from above beautified code.))</p>

<h1 id="summary">Summary</h1>

<p>Now I can see translation events.</p>

<p><img src="//rcmdnk.com/images/post/20150128_translateanalytics.jpg" alt="translateanalytics" class="pic" /></p>

<p>It may be better if I can fix with short codes from outside,
but it seems difficult to do so, then got all scripts and modified locally.</p>

<p>This problem was posted in Google Group of Analytics,
so I think Google engineers will notice and fix it soon.</p>

<p>Until then, I will keep this fix to track translation events.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Notice a copy event on your blog in Google Analytics]]></title>
    <link href="https://rcmdnk.com/en/blog/2015/01/27/octopress-javascript/"/>
    <updated>2015-01-27T12:00:00+00:00</updated>
    <id>https://rcmdnk.com/en/blog/2015/01/27/octopress-javascript</id>
    <content type="html"><![CDATA[<div class="amazon-img"><a href="http://www.amazon.com/o/ASIN/0672333201/rcmdnksblog-20/" rel="nofollow" target="_blank"><img src="https://images-fe.ssl-images-amazon.com/images/I/41q08y3QGAL._SS200_.jpg" alt="Sams Teach Yourself Google Analytics in 10 Minutes" /></a></div>

<p>In the post <a href="https://rcmdnk.com/en/blog/2014/12/11/blog-octopress-javascript/">Notice a copy event on your blog by email only by JavaScript</a>,
the copy events are sent to Mandrill to make an email notice.</p>

<p>In this post, I would introduce how to analyze such events
in Google Analytics.</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#javascript-code" id="markdown-toc-javascript-code">JavaScript Code</a></li>
  <li><a href="#check-copy-events-in-google-analytics" id="markdown-toc-check-copy-events-in-google-analytics">Check copy events in Google Analytics</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>Sponsored Links</div>
  <div>
  <ins class="adsbygoogle google-img-rect" style="display:inline-block" data-ad-client="ca-pub-3802317723662375" data-ad-slot="4042912847"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h1 id="javascript-code">JavaScript Code</h1>

<p>Here is a snippet to send a copy event to Google Analytics:</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span></span><span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
</span><span class="line">...
</span><span class="line"><span class="p">&lt;</span><span class="nt">script</span><span class="p">&gt;</span>
</span><span class="line"><span class="nb">window</span><span class="p">.</span><span class="nx">onload</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kd">function</span><span class="p">()</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">  </span><span class="nb">document</span><span class="p">.</span><span class="nx">oncopy</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kd">function</span><span class="w"> </span><span class="p">()</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">    </span><span class="kd">var</span><span class="w"> </span><span class="nx">selected</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">&quot;&quot;</span><span class="p">;</span>
</span><span class="line"><span class="w">    </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="ow">typeof</span><span class="w"> </span><span class="nb">window</span><span class="p">.</span><span class="nx">getSelection</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="s2">&quot;undefined&quot;</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">        </span><span class="kd">var</span><span class="w"> </span><span class="nx">sel</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">window</span><span class="p">.</span><span class="nx">getSelection</span><span class="p">();</span>
</span><span class="line"><span class="w">        </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="nx">sel</span><span class="p">.</span><span class="nx">rangeCount</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">            </span><span class="kd">var</span><span class="w"> </span><span class="nx">container</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span>
</span><span class="line"><span class="w">            </span><span class="k">for</span><span class="w"> </span><span class="p">(</span><span class="kd">var</span><span class="w"> </span><span class="nx">i</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mf">0</span><span class="p">,</span><span class="w"> </span><span class="nx">len</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">sel</span><span class="p">.</span><span class="nx">rangeCount</span><span class="p">;</span><span class="w"> </span><span class="nx">i</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="nx">len</span><span class="p">;</span><span class="w"> </span><span class="o">++</span><span class="nx">i</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">                </span><span class="nx">container</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">sel</span><span class="p">.</span><span class="nx">getRangeAt</span><span class="p">(</span><span class="nx">i</span><span class="p">).</span><span class="nx">cloneContents</span><span class="p">());</span>
</span><span class="line"><span class="w">            </span><span class="p">}</span>
</span><span class="line"><span class="w">            </span><span class="nx">selected</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">container</span><span class="p">.</span><span class="nx">innerHTML</span><span class="p">;</span>
</span><span class="line"><span class="w">        </span><span class="p">}</span>
</span><span class="line"><span class="w">    </span><span class="p">}</span><span class="w"> </span><span class="k">else</span><span class="w"> </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="ow">typeof</span><span class="w"> </span><span class="nb">document</span><span class="p">.</span><span class="nx">selection</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="s2">&quot;undefined&quot;</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">        </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">type</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">&quot;Text&quot;</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">            </span><span class="nx">selected</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">document</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">createRange</span><span class="p">().</span><span class="nx">htmlText</span><span class="p">;</span>
</span><span class="line"><span class="w">        </span><span class="p">}</span>
</span><span class="line"><span class="w">    </span><span class="p">}</span>
</span><span class="line"><span class="w">    </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="o">!</span><span class="nx">selected</span><span class="p">)</span><span class="w"> </span><span class="k">return</span><span class="p">;</span>
</span><span class="line"><span class="w">    </span><span class="nx">ga</span><span class="p">(</span><span class="s1">&#39;send&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;event&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;copy&#39;</span><span class="p">,</span><span class="w"> </span><span class="nx">location</span><span class="p">.</span><span class="nx">href</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="s1">&#39;:&#39;</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="nb">document</span><span class="p">.</span><span class="nx">title</span><span class="p">,</span><span class="w"> </span><span class="nx">selected</span><span class="p">);</span>
</span><span class="line"><span class="w">  </span><span class="p">}</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="p">&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
</span><span class="line">...
</span><span class="line"><span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
</span></code></pre></td></tr></table></div></figure>

<p>Place this code in your <code>&lt;head&gt;...&lt;/head&gt;</code> as above.</p>

<p>In this code, it assumes Universal Analytics version (analytics.js).</p>

<p>The key point is usage of Analytics’ event tracking:</p>

<pre><code>ga('send', 'event', 'copy', location.href + ':' + document.title, selected);
</code></pre>

<p>In this function, arguments mean:</p>

<ul>
  <li>1st arg: <strong>Command</strong>. <code>send</code> to send information to Google Analytics.</li>
  <li>2nd arg: <strong>hitType</strong>. <code>event</code> to set Event Tracking.</li>
  <li>3rd arg: <strong>eventCategory</strong>. Category of the event (&lt;150bytes).</li>
  <li>4th arg: <strong>eventAction</strong>. Action of the event (&lt;150bytes).</li>
  <li>5th arg: <strong>eventLabel</strong>. Label of the event (&lt;150bytes).</li>
  <li>6th arg: <strong>eventValue</strong>. Value of the event (&gt;=0). It is omitted in this time.</li>
</ul>

<p>If you are using old version (ga.js), replace:</p>

<pre><code>ga('send', 'event', 'copy', location.href + ':' + document.title, selected);
</code></pre>

<p>with</p>

<pre><code>_gaq.push(['_trackEvent', 'copy', location.href + ':' + document.title, selected]);
</code></pre>

<h1 id="check-copy-events-in-google-analytics">Check copy events in Google Analytics</h1>

<p>You can find the results in <strong>Behavior</strong><i class="fa fa-arrow-right"></i><strong>Events</strong>.</p>

<p><img src="https://rcmdnk.com/en/images/post/20150127_behavior.jpg" alt="behavior" class="pic" /></p>

<p>In <strong>Overview</strong>, <strong>copy</strong> category is there.</p>

<p><img src="https://rcmdnk.com/en/images/post/20150127_eventcategory.jpg" alt="eventcategory" class="pic" /></p>

<p>Choose <strong>copy</strong> and click <strong>Event Action</strong>, there is a page list.</p>

<p><img src="https://rcmdnk.com/en/images/post/20150127_eventaction.jpg" alt="eventaction" class="pic" /></p>

<p>If go to <strong>Event Label</strong>, you can find what were copied in your blog.
If you choose any page in <strong>Event Action</strong> first, then go to <strong>Event Label</strong>,
only copies of the selected page are shown.</p>

<p><img src="https://rcmdnk.com/en/images/post/20150127_eventlabel.jpg" alt="eventlabel" class="pic" /></p>

<p>In above snippet, copied region is sent as HTML.
Therefore, if the large region is copied, you will see sentences with HTML tags.</p>

<p><img src="//rcmdnk.com/images/post/20150105_longlabel.jpg" alt="eventlabel2" class="pic" /></p>

<p>If you wish to have only text, manage <code>select</code> variable in above snippet like:</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="diff"><span class="line"><span></span><span class="gd">-selected = container.innerHTML;</span>
</span><span class="line"><span class="gi">+selected = container.innerText;</span>
</span></code></pre></td></tr></table></div></figure>

<p>and</p>

<figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="diff"><span class="line"><span></span><span class="gd">-selected = document.selection.createRange().htmlText;</span>
</span><span class="line"><span class="gi">+selected = document.selection.createRange().text;</span>
</span></code></pre></td></tr></table></div></figure>

<p>At <strong>Event Category</strong> page,
you can use <strong>Secondary dimension</strong> to divide events into each page or title, too.</p>

<p><img src="https://rcmdnk.com/en/images/post/20150127_secondarydimension.jpg" alt="secondarydimension" class="pic" /></p>

<p>If you want to add more marks to divide into,
you can use <strong>Event Action</strong> instead of the page url+title.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Notice a copy event on your blog by email only by JavaScript]]></title>
    <link href="https://rcmdnk.com/en/blog/2014/12/11/blog-octopress-javascript/"/>
    <updated>2014-12-11T14:00:00+00:00</updated>
    <id>https://rcmdnk.com/en/blog/2014/12/11/blog-octopress-javascript</id>
    <content type="html"><![CDATA[<p>B0863R7NPW</p>
<div class="amazon-img"><a href="http://www.amazon.com/o/ASIN/B0863R7NPW/rcmdnksblog-20/" rel="nofollow" target="_blank"><img src="https://images-fe.ssl-images-amazon.com/images/I/81xurWVvLJL._SS200_.jpg" alt="Mandrill" /></a></div>

<p>It is interesting to know what parts are copied by readers.</p>

<p>Though GitHub Pages cannot use such PHP,
I found a way to send email by JavaScript as written in
<a href="https://rcmdnk.com/en/blog/2014/12/11/blog-javascript/">Send a mail by JavaScript with Mandrill</a>.</p>

<p>Using this function, copy notice function was implemented in this blog.</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#sign-up-to-mandrill" id="markdown-toc-sign-up-to-mandrill">Sign up to Mandrill</a></li>
  <li><a href="#javascript" id="markdown-toc-javascript">JavaScript</a></li>
  <li><a href="#summary" id="markdown-toc-summary">Summary</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>Sponsored Links</div>
  <div>
  <ins class="adsbygoogle google-img-rect" style="display:inline-block" data-ad-client="ca-pub-3802317723662375" data-ad-slot="4042912847"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h1 id="sign-up-to-mandrill">Sign up to Mandrill</h1>

<p>Sign up to <a href="http://mandrill.com/">Mandrill</a>,
and get an API key.</p>

<blockquote>
  <p><a href="https://rcmdnk.com/en/blog/2014/12/11/blog-javascript/">Send a mail by JavaScript with Mandrill</a>.</p>
</blockquote>

<h1 id="javascript">JavaScript</h1>

<p>Prepare JavaScript like a blow:</p>

<figure class="code"><figcaption><span>source/javascript/utils.js</span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span></span><span class="nx">jQuery</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">$</span><span class="p">){</span>
</span><span class="line"><span class="w">  </span><span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;copy&#39;</span><span class="p">,</span><span class="w"> </span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">    </span><span class="kd">var</span><span class="w"> </span><span class="nx">selected</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">&quot;&quot;</span><span class="p">;</span>
</span><span class="line"><span class="w">    </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="ow">typeof</span><span class="w"> </span><span class="nb">window</span><span class="p">.</span><span class="nx">getSelection</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="s2">&quot;undefined&quot;</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">        </span><span class="kd">var</span><span class="w"> </span><span class="nx">sel</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">window</span><span class="p">.</span><span class="nx">getSelection</span><span class="p">();</span>
</span><span class="line"><span class="w">        </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="nx">sel</span><span class="p">.</span><span class="nx">rangeCount</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">            </span><span class="kd">var</span><span class="w"> </span><span class="nx">container</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span>
</span><span class="line"><span class="w">            </span><span class="k">for</span><span class="w"> </span><span class="p">(</span><span class="kd">var</span><span class="w"> </span><span class="nx">i</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mf">0</span><span class="p">,</span><span class="w"> </span><span class="nx">len</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">sel</span><span class="p">.</span><span class="nx">rangeCount</span><span class="p">;</span><span class="w"> </span><span class="nx">i</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="nx">len</span><span class="p">;</span><span class="w"> </span><span class="o">++</span><span class="nx">i</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">                </span><span class="nx">container</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">sel</span><span class="p">.</span><span class="nx">getRangeAt</span><span class="p">(</span><span class="nx">i</span><span class="p">).</span><span class="nx">cloneContents</span><span class="p">());</span>
</span><span class="line"><span class="w">            </span><span class="p">}</span>
</span><span class="line"><span class="w">            </span><span class="nx">selected</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">container</span><span class="p">.</span><span class="nx">innerHTML</span><span class="p">;</span>
</span><span class="line"><span class="w">        </span><span class="p">}</span>
</span><span class="line"><span class="w">    </span><span class="p">}</span><span class="w"> </span><span class="k">else</span><span class="w"> </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="ow">typeof</span><span class="w"> </span><span class="nb">document</span><span class="p">.</span><span class="nx">selection</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="s2">&quot;undefined&quot;</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">        </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">type</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">&quot;Text&quot;</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">            </span><span class="nx">selected</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">document</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">createRange</span><span class="p">().</span><span class="nx">htmlText</span><span class="p">;</span>
</span><span class="line"><span class="w">        </span><span class="p">}</span>
</span><span class="line"><span class="w">    </span><span class="p">}</span>
</span><span class="line"><span class="w">    </span><span class="kd">var</span><span class="w"> </span><span class="nx">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">document</span><span class="p">.</span><span class="nx">title</span><span class="p">;</span>
</span><span class="line"><span class="w">    </span><span class="kd">var</span><span class="w">  </span><span class="nx">url</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">location</span><span class="p">.</span><span class="nx">href</span><span class="p">;</span>
</span><span class="line"><span class="w">    </span><span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span>
</span><span class="line"><span class="w">      </span><span class="nx">type</span><span class="o">:</span><span class="w"> </span><span class="s2">&quot;POST&quot;</span><span class="p">,</span>
</span><span class="line"><span class="w">      </span><span class="nx">url</span><span class="o">:</span><span class="w"> </span><span class="s2">&quot;https://mandrillapp.com/api/1.0/messages/send.json&quot;</span><span class="p">,</span>
</span><span class="line"><span class="w">      </span><span class="nx">data</span><span class="o">:</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">        </span><span class="s1">&#39;key&#39;</span><span class="o">:</span><span class="w"> </span><span class="s1">&#39;YOUR_API_KEY&#39;</span><span class="p">,</span>
</span><span class="line"><span class="w">        </span><span class="s1">&#39;message&#39;</span><span class="o">:</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">          </span><span class="s1">&#39;from_email&#39;</span><span class="o">:</span><span class="w"> </span><span class="s1">&#39;your_sender@example.com&#39;</span><span class="p">,</span>
</span><span class="line"><span class="w">          </span><span class="s1">&#39;to&#39;</span><span class="o">:</span><span class="w"> </span><span class="p">[</span>
</span><span class="line"><span class="w">            </span><span class="p">{</span>
</span><span class="line"><span class="w">              </span><span class="s1">&#39;email&#39;</span><span class="o">:</span><span class="w"> </span><span class="s1">&#39;your_receiver@example.com&#39;</span><span class="p">,</span>
</span><span class="line"><span class="w">              </span><span class="s1">&#39;name&#39;</span><span class="o">:</span><span class="w"> </span><span class="s1">&#39;your receiver&#39;</span><span class="p">,</span>
</span><span class="line"><span class="w">              </span><span class="s1">&#39;type&#39;</span><span class="o">:</span><span class="w"> </span><span class="s1">&#39;to&#39;</span>
</span><span class="line"><span class="w">            </span><span class="p">}</span>
</span><span class="line"><span class="w">          </span><span class="p">],</span>
</span><span class="line"><span class="w">          </span><span class="s1">&#39;subject&#39;</span><span class="o">:</span><span class="w"> </span><span class="s1">&#39;Copied at &#39;</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="nx">title</span><span class="p">,</span>
</span><span class="line"><span class="w">          </span><span class="s1">&#39;html&#39;</span><span class="o">:</span><span class="w"> </span><span class="s1">&#39;&lt;div&gt;&lt;a href=&quot;&#39;</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="nx">url</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="s1">&#39;&quot;&gt;&#39;</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="nx">title</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="s1">&#39;&lt;/a&gt;&lt;/div&gt;&lt;br&gt;&lt;br&gt;&lt;div&gt;&#39;</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="nx">selected</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="s1">&#39;&lt;/div&gt;&#39;</span>
</span><span class="line"><span class="w">        </span><span class="p">}</span>
</span><span class="line"><span class="w">      </span><span class="p">}</span>
</span><span class="line"><span class="w">    </span><span class="p">});</span>
</span><span class="line"><span class="w">  </span><span class="p">});</span>
</span><span class="line"><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>

<p>In Octopress, I made <code>source/javascript/utils.js</code>
and put my functions there.</p>

<p>It is read from <code>source/_includes/head.html</code>:</p>

<figure class="code"><figcaption><span>source/_includes/head.html</span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span></span>...
</span><span class="line"><span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
</span><span class="line">...
</span><span class="line">  <span class="p">&lt;</span><span class="nt">script</span> <span class="na">src</span><span class="o">=</span><span class="s">&quot;//ajax.googleapis.com/ajax/libs/jquery/2.0.0/jquery.min.js&quot;</span><span class="p">&gt;&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
</span><span class="line">...
</span><span class="line">  <span class="p">&lt;</span><span class="nt">script</span> <span class="na">src</span><span class="o">=</span><span class="s">&quot;/javascripts/utils.js&quot;</span><span class="p">&gt;&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
</span><span class="line"><span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
</span><span class="line">...
</span></code></pre></td></tr></table></div></figure>

<p>To use the script, you just need to change:</p>

<ul>
  <li><code>key</code>: What you got from Mandrill.</li>
  <li><code>from_email</code>: Sender’s email address. Any adress with correct shape (<code>~@XXX.YYY</code>) can be used.</li>
  <li><code>email</code>: Receiver’s email address.</li>
  <li><code>name</code>: Receiver’s name.</li>
</ul>

<p>In above JavaScript,
the function is called when <code>copy</code> event occurs.
(by <i class="key">Ctrl</i>-<i class="key">C</i>(<i class="key">Cmd</i>-<i class="key">C</i>) or from contextmenu.)</p>

<p>In the function, <code>window.getSelection()</code> is used to get a selected region.
<code>document.selection</code> part is for old IE.</p>

<blockquote>
  <p><a href="http://stackoverflow.com/questions/5643635/how-to-get-selected-html-text-with-javascript">getselection - How to get selected html text with javascript? - Stack Overflow</a></p>
</blockquote>

<p>In this way, API key is published.
It is a bit bad, but the key is used only for this purpose,
then I think it is ok for now.</p>

<blockquote>
  <p><a href="http://stackoverflow.com/questions/7381150/how-to-send-an-email-from-javascript">How to send an email from JavaScript - Stack Overflow</a></p>
</blockquote>

<h1 id="summary">Summary</h1>

<p>Copy notice function was implemented rather easier than what I thought.</p>

<p>This method is not only for Octopress, but you can use in any sites/blogs.
It is interesting to see it.</p>

<p>After the implementation, I some copies.
It seems that there are many copies which are just accidents…<img alt="stuck_out_tongue_winking_eye" src="https://rcmdnk.com/en/images/emoji/unicode/1f61c.png" class="emoji" /></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Send a mail by JavaScript with Mandrill]]></title>
    <link href="https://rcmdnk.com/en/blog/2014/12/11/blog-javascript/"/>
    <updated>2014-12-11T13:00:00+00:00</updated>
    <id>https://rcmdnk.com/en/blog/2014/12/11/blog-javascript</id>
    <content type="html"><![CDATA[<p>This blog is hosted on GitHub pages, in which we cannot use such PHP.
Even in such a situation, I found the way to send email only by JavaScript.</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#mandrill" id="markdown-toc-mandrill">Mandrill</a></li>
</ul>
<div class="group"></div>

<div class="center_wrapper">
  <div>Sponsored Links</div>
  <div>
  <ins class="adsbygoogle google-img-rect" style="display:inline-block" data-ad-client="ca-pub-3802317723662375" data-ad-slot="4042912847"></ins>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
  </div>
</div>

<h1 id="mandrill">Mandrill</h1>

<p><a href="http://mandrill.com/">Transactional Email from MailChimp - Mandrill</a></p>

<p>Mandrill is an email infrastructure service.
With the API of Mandrill, you can send email only by JavaScript.</p>

<p>You can use up to 12000 mails in free per month.
If you need more, you can use 1000 mails/$0.20 up to 1M mails,
1000 mails/$0.15 up to 5M mails,
and 1000 mails/$0.10 for more.</p>

<p>There is an hourly limitation, which is decided by a reputation.
My first limit as a reputation of “Unknown” was 252 mails/hour.</p>

<p>Anyway, to use the API, sign up and get a key
from <code>Settings</code> category.</p>

<p>Then, you just need to post to
<strong>https://mandrillapp.com/api/1.0/messages/send.json</strong>
by ajax.</p>

<p>First, prepare following JavaScript (using jQuery):</p>

<figure class="code"><figcaption><span>utils.js</span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span></span><span class="kd">function</span><span class="w"> </span><span class="nx">sendMail</span><span class="p">(){</span>
</span><span class="line"><span class="w">  </span><span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span>
</span><span class="line"><span class="w">    </span><span class="nx">type</span><span class="o">:</span><span class="w"> </span><span class="s2">&quot;POST&quot;</span><span class="p">,</span>
</span><span class="line"><span class="w">    </span><span class="nx">url</span><span class="o">:</span><span class="w"> </span><span class="s2">&quot;https://mandrillapp.com/api/1.0/messages/send.json&quot;</span><span class="p">,</span>
</span><span class="line"><span class="w">    </span><span class="nx">data</span><span class="o">:</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">      </span><span class="s1">&#39;key&#39;</span><span class="o">:</span><span class="w"> </span><span class="s1">&#39;YOUR_KEY&#39;</span><span class="p">,</span>
</span><span class="line"><span class="w">      </span><span class="s1">&#39;message&#39;</span><span class="o">:</span><span class="w"> </span><span class="p">{</span>
</span><span class="line"><span class="w">        </span><span class="s1">&#39;from_email&#39;</span><span class="o">:</span><span class="w"> </span><span class="s1">&#39;YOUR_SENDER@example.com&#39;</span><span class="p">,</span>
</span><span class="line"><span class="w">        </span><span class="s1">&#39;to&#39;</span><span class="o">:</span><span class="w"> </span><span class="p">[</span>
</span><span class="line"><span class="w">          </span><span class="p">{</span>
</span><span class="line"><span class="w">            </span><span class="s1">&#39;email&#39;</span><span class="o">:</span><span class="w"> </span><span class="s1">&#39;YOUR_RECEIVER@example.com&#39;</span><span class="p">,</span>
</span><span class="line"><span class="w">            </span><span class="s1">&#39;name&#39;</span><span class="o">:</span><span class="w"> </span><span class="s1">&#39;YOUR_RECEIVER_NAME&#39;</span><span class="p">,</span>
</span><span class="line"><span class="w">            </span><span class="s1">&#39;type&#39;</span><span class="o">:</span><span class="w"> </span><span class="s1">&#39;to&#39;</span>
</span><span class="line"><span class="w">          </span><span class="p">}</span>
</span><span class="line"><span class="w">        </span><span class="p">],</span>
</span><span class="line"><span class="w">        </span><span class="s1">&#39;subject&#39;</span><span class="o">:</span><span class="w"> </span><span class="s1">&#39;title&#39;</span><span class="p">,</span>
</span><span class="line"><span class="w">        </span><span class="s1">&#39;html&#39;</span><span class="o">:</span><span class="w"> </span><span class="s1">&#39;html can be used&#39;</span>
</span><span class="line"><span class="w">      </span><span class="p">}</span>
</span><span class="line"><span class="w">    </span><span class="p">}</span>
</span><span class="line"><span class="w">  </span><span class="p">});</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

<p>Please refer
<a href="https://mandrillapp.com/api/docs/messages.JSON.html">Messages API  Mandrill</a>
about the data structure.</p>

<p>Above is a minimum example.</p>

<p>For <code>from_email</code> you can use any address if the address is valid shape
like <code>~@XXX.YYY</code>.</p>

<p>You can set more than one receiver in <code>to</code>,
as you can see it is an array.</p>

<p>Mandrill accepts html format by <code>html</code> key.
If you want to send flat text, use <code>text</code> key.</p>

<p>Then, include above script in such <code>head</code> of html.
Don’t forget to include jQuery, too.</p>

<figure class="code"><figcaption><span>index.html</span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span></span><span class="p">&lt;</span><span class="nt">script</span> <span class="na">src</span><span class="o">=</span><span class="s">&quot;//ajax.googleapis.com/ajax/libs/jquery/2.0.0/jquery.min.js&quot;</span><span class="p">&gt;&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
</span><span class="line"><span class="p">&lt;</span><span class="nt">script</span> <span class="na">type</span><span class="o">=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src</span><span class="o">=</span><span class="s">&quot;./utils.js&quot;</span><span class="p">&gt;&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
</span></code></pre></td></tr></table></div></figure>

<p>Now it is ready.
You can call the function <code>sendMail</code> as you like.</p>

<p>For example using button:</p>

<figure class="code"><figcaption><span>index.html</span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span></span><span class="p">&lt;</span><span class="nt">form</span> <span class="na">name</span><span class="o">=</span><span class="s">&quot;mail&quot;</span><span class="p">&gt;</span>
</span><span class="line"><span class="p">&lt;</span><span class="nt">input</span> <span class="na">type</span><span class="o">=</span><span class="s">&quot;button&quot;</span> <span class="na">value</span><span class="o">=</span><span class="s">&quot;Click!&quot;</span> <span class="na">onClick</span><span class="o">=</span><span class="s">&quot;sendMail()&quot;</span><span class="p">&gt;</span>
</span><span class="line"><span class="p">&lt;/</span><span class="nt">form</span><span class="p">&gt;</span>
</span></code></pre></td></tr></table></div></figure>

<p>That is all.</p>

<p>These emails are also managed in Mandrill and you can see in your account page.</p>
]]></content>
  </entry>
  
</feed>
